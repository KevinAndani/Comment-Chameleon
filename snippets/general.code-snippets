{
  "Critical Section Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "critical",
    "body": ["// CRITICAL: ‚ö†Ô∏è $1"],
    "description": "Marks a critical section of code with warning emoji"
  },

  "Todo Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "todo",
    "body": ["// TODO: üìã $1"],
    "description": "Marks something that needs to be done"
  },

  "Fixme Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "fixme",
    "body": ["// FIXME: üîß $1"],
    "description": "Marks something that needs to be fixed urgently"
  },

  "Bug Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "bug",
    "body": ["// BUG: üêõ $1"],
    "description": "Marks a known bug in the code"
  },

  "Hack Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "hack",
    "body": ["// HACK: ‚ö° $1"],
    "description": "Marks a hacky/non-ideal solution"
  },

  "Note Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "note",
    "body": ["// NOTE: üìù $1"],
    "description": "Adds an important note about the code"
  },

  "Info Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "info",
    "body": ["// INFO: ‚ÑπÔ∏è $1"],
    "description": "Provides general information about the code"
  },

  "Idea Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "idea",
    "body": ["// IDEA: üí° $1"],
    "description": "Suggests an idea for improvement"
  },

  "Explanation Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "explanation",
    "body": ["// EXPLANATION: üîç $1"],
    "description": "Explains what/why something is done"
  },

  "Why Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "why",
    "body": ["// WHY: ü§î $1"],
    "description": "Explains why a particular approach was chosen"
  },

  "WHAT THIS DO Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "what_this_do",
    "body": ["// WHAT THIS DO: ‚ÅâÔ∏è $1"],
    "description": "Explains what a particular piece of code does"
  },

  "Context Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "context",
    "body": ["// CONTEXT: üåê $1"],
    "description": "Provides broader context about the code"
  },

  "Debug Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "debug",
    "body": ["// DEBUG: üî¨ $1"],
    "description": "Adds a debug-related note"
  },

  "Review Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "review",
    "body": ["// REVIEW: üìñ $1"],
    "description": "Marks code that needs review or attention"
  },

  "Optimize Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "optimize",
    "body": ["// OPTIMIZE: üöÄ $1"],
    "description": "Suggests code optimization opportunities"
  },

  "Section Start Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "section_start",
    "body": ["// SECTION: üìÇ $1 begin"],
    "description": "Marks the beginning of a logical code section"
  },

  "Section End Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "section_end",
    "body": ["// SECTION: üîö $1 end"],
    "description": "Marks the end of a logical code section"
  },

  "Next Step Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "next_step",
    "body": ["// NEXT STEP: ‚û°Ô∏è $1"],
    "description": "Indicates the subsequent action or task in the workflow"
  },

  "Security Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "security",
    "body": ["// SECURITY: üîí $1"],
    "description": "Highlights security-sensitive code"
  },

  "Performance Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "performance",
    "body": ["// PERFORMANCE: ‚è±Ô∏è $1"],
    "description": "Indicates performance-related code"
  },

  "Deprecated Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "deprecated",
    "body": ["// DEPRECATED: ‚õî $1"],
    "description": "Marks code that should no longer be used"
  },

  "API Comment": {
    "scope": "javascript,typescript,c,cpp,csharp,java",
    "prefix": "api",
    "body": ["// API: üîå $1"],
    "description": "Documents public interface contracts"
  }
}
